version: 0.2
env:
  secrets-manager:
    LOGIN: sonarcloud:sonartoken
    HOST: sonarcloud:Host
    Organization: sonarcloud:Organization
    Project: sonarcloud:Project
phases:
  install:
    commands:
      - echo ========== Starting Install Phase ==========
      - echo updating ENV
      - apt-get update
      - apt-get install -y jq
      - echo getting sonarcloud cli
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
      - unzip ./sonar-scanner-cli-4.7.0.2747-linux.zip
      - ls
      - pwd
      - echo adding sonarcloud to path
      - export PATH=$PATH:./sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner
      - echo $PATH
      - echo setting up pipenv and installing packages
      - pipenv install
    finally:
      - echo ========== Finished Install Phase ==========
  pre_build:
    commands:
      - echo ========== Starting Pre-Build Phase ==========
      - echo running sonarcloud Static analysis
      - sonar-scanner \
        -Dsonar.organization=$Organization \
        -Dsonar.projectKey=$Project \
        -Dsonar.sources=. \
        -Dsonar.host.url=$HOST
      - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=$Project >result.json
      - cat result.json
      - if [ $(jq -r '.projectStatus.status' result.json) = ERROR ] ; then $CODEBUILD_BUILD_SUCCEEDING -eq 0 ;fi
    finally:
      - echo ========== Finished Pre-Build Phase ==========
  build:
    commands:
      - echo ========== Starting Build Phase ==========
      - echo running tests
      - pipenv run pytest UnitTests.py
    finally:
      - echo ========== Finished Build Phase ==========
  post_build:
    commands:
      - echo ========== Starting Post Build Phase ==========
    finally:
      - echo ========== Finished Post Build Phase ==========